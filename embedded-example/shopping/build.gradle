plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.cloud.tools.jib'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

archivesBaseName = 'statefun-shopping'
mainClassName = 'shopping.Harness'
//mainClassName = 'org.apache.flink.statefun.flink.core.StatefulFunctionsJob'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

kapt {
    correctErrorTypes = true
}

configurations {
    provided
    statefunLib

    localCompileClasspath.extendsFrom compileClasspath
    localRuntimeClasspath.extendsFrom runtimeClasspath

    implementation.exclude group: 'org.apache.commons'
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation libs.bundles.serialization

    implementation project(':protocols')
    implementation libs.asciitable

    provided libs.bundles.protobuf
    provided libs.statefun.sdk
    provided libs.statefun.harness
    provided libs.slf4j.api
    provided libs.slf4j.impl

    kapt libs.auto.service
    compileOnly libs.auto.service.annotations

    statefunLib libs.statefun.distribution
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided

    local {
        compileClasspath += configurations.provided
        runtimeClasspath += main.output
        runtimeClasspath += configurations.provided
    }
}

run {
    applicationDefaultJvmArgs = [
        "-Dlog4j2.configurationFile=log4j2.properties",
    ]
    classpath = sourceSets.local.runtimeClasspath
}

jib {
    from.image = "flink:${flinkVersion}-java11"
    to.image = "statefun-shopping"

    containerizingMode = 'packaged'
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        entrypoint = 'INHERIT'
        appRoot = '/opt/flink/usrlib'
    }

    extraDirectories {
        paths {
            path {
                from = file("${buildDir}/statefun-distribution")
                into = '/opt/flink/usrlib/libs/'
            }
        }
    }
}

task copyStatefunLibs(type: Copy) {
    from configurations.statefunLib
    into "${buildDir}/statefun-distribution"
    include("statefun-flink-distribution*")
}

//tasks.jib.dependsOn copyStatefunLibs
tasks.jibDockerBuild.dependsOn copyStatefunLibs
